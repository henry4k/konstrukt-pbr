This is a subtle issue. First of all, there's a difference between what the
"color of a light source" means for point lights versus area lights: the color
of a point light is an irradiance, while the color of an area light is a
radiance.

Radiance - Strahldichte
> Radiant flux received by a surface, per unit solid angle per unit projected area.

Irradiance - Bestrahlungsstärke
> Radiant flux received by a surface per unit area.

So when using the representative-point method for rendering area lights, we
actually need to convert the color (radiance) of the light source to an
irradiance, so we can treat it as a point light. So we need to calculate (or
approximate) the irradiance received the shaded point from the area light.

For uniform spherical area lights, a result that's quoted in Brian Karis'
course notes is that the irradiance is the same as a point light of the same
total power. So you can calculate the power of the spherical light π * area *
radiance, then calculate the resulting irradiance at the shaded point power /
(4π * distance²) (for physical 1/r² falloff, or substitute your own
attenuation function if you like). For other shapes of area lights it will be
more difficult, but you can hopefully work out some approximate irradiance
formula.

Note that the irradiance will be numerically smaller than the radiance when
the shaded point is far enough from the light, so this will help cut down the
intensity of the reflection.

The other factor here is that the representative-point method isn't
energy-conserving by itself. Karis recommends altering the GGX normalization
factor to approximately fix this; see equations 10 and 14 in his course notes.
This will also reduce the brightness of the reflection. Between these two
factors, the intensity should be cut down to something more reasonable.
